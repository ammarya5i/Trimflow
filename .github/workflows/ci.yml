name: Fast CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Cache dependencies globally
env:
  NODE_VERSION: '18'

jobs:
  # Fast linting and type checking (no tests for speed)
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run type check
        run: npm run type-check

  # Quick build test (without full deployment)
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          # Use dummy values for build test
          DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
          NEXTAUTH_SECRET: "dummy-secret-for-build-test"
          NEXTAUTH_URL: "http://localhost:3000"
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_dummy"
          NEXT_PUBLIC_APP_URL: "http://localhost:3000"

  # Deploy only on main branch and only if secrets are available
  deploy:
    needs: [lint, build-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && secrets.VERCEL_TOKEN != ''
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./
